1.2 Variables And Arithmetic Expressions
	1) C provide date types:
		char  short long  double  
	2) scanf  and  printf

1.3  For the statement

1.4  Symbolic Constants
	#define  name  replacement list


1.5  Character Input and Output
	  c = getchar();
		putchar(c);

	main(){
		char s = 'B';
		putchar(s);
		return 0;
	}

	scanf:
	scanf("a = %f, b = %f, c = %f", &a, &b, &c);//a = 1, b = 2, c = 3
	scanf("%f%f%f", &a, &b, &c);//123
	scanf("%f:%f:%f", &a, &b, &c);//1:2:3
	1.5.1  File Copying 
		
	1.5.2 Character Counting
	1.5.3 Line Counting
	1.5.4 Word Counting

1.6 Arrays

1.7 Funtions
	1.7.1 The declaration
		int power(int base, int n);

		we could have written:
		int power(int, int);
1.8 Arguments - Call by value
1.9 Character Arrays
1.10 External Variable and Scope
	


2. Type Operators and Expresion
	2.1 Variable Names
	2.2 Date Type and Size
	2.3 Constants
	2.4 Declarations 
		All variables must be declared before use
	2.5 Arithmetic Operators
	2.6 Relational and logical operators
	2.7 Type Conversions
	2.8 Increment and Decrement operators
	2.9 Bitwise Operators
	2.10 Assignment Operators and Expressions
	2.11 Conditions Expressions
	2.12 Precedence and Order of Evaluation




3. Control Flow
	3.1 Statements and Blocks
		In C , the semicolon is a statement terminator
	3.2 If-Else(Else-if)
	3.3 Switch
		switch (expresion){
			case const-expr: statements
			case const-expr: statements
			default: statements
		}
	
	3.4 Loop- While and For
		while(expression)
			statement

		for (;;){
			...	
		}
	3.5 Loop - Do-while
		do
			statement
		while(expresion);
	3.6 Break and Continue
	3.7 Goto and labels


4. Functions and Program
	4.1 Basics of Functions


5. Pointers and Arrays
	5.1 Pointers and Adresses
	
